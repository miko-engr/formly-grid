{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/grid.type.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { FormlyFormOptions, FormlyFieldConfig } from \"@ngx-formly/core/\";\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  title = \"mygrid\";\n\n  form = new FormGroup({});\n  model: any = {\n    investments: [\n      {\n        investmentName: \"project1\",\n        investmentDate: \"2021-02-01\",\n        stockIdentifier: 1,\n      },\n      {\n        investmentName: \"project2\",\n        investmentDate: \"2021-02-02\",\n        stockIdentifier: 2,\n      },\n      {\n        investmentName: \"project3\",\n        investmentDate: \"2021-02-03\",\n        stockIdentifier: 3,\n      },\n      {\n        investmentName: \"project4\",\n        investmentDate: \"2021-02-04\",\n        stockIdentifier: 4,\n      },\n      {\n        investmentName: \"project5\",\n        investmentDate: \"2021-02-05\",\n        stockIdentifier: 5,\n      },\n      {\n        investmentName: \"project6\",\n        investmentDate: \"2021-02-06\",\n        stockIdentifier: 6,\n      },\n      {\n        investmentName: \"project7\",\n        investmentDate: \"2021-02-07\",\n        stockIdentifier: 7,\n      },\n      {\n        investmentName: \"project8\",\n        investmentDate: \"2021-02-08\",\n        stockIdentifier: 8,\n      },\n    ],\n  };\n\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [\n    {\n      className: \"section-label\",\n      template: \"<h5>Personal data</h5>\",\n    },\n    {\n      key: \"investments\",\n      type: \"grid\",\n      className: \"ag-theme-balham\",\n      templateOptions: {\n        height: \"370px\",\n        gridOptions: {\n          rowHeight: 42,\n          columnDefs: [\n            {\n              headerName: \"Name of Investment\",\n              field: \"investmentName\",\n              sortable: true,\n              width: 350,\n            },\n            {\n              headerName: \"Date of Investment\",\n              field: \"investmentDate\",\n              sortable: true,\n              width: 350,\n            },\n            {\n              headerName: \"Stock Identifier\",\n              field: \"stockIdentifier\",\n              // width: 330,\n            },\n          ],\n        },\n      },\n      fieldArray: {\n        fieldGroup: [\n          {\n            type: \"input\",\n            key: \"investmentName\",\n            templateOptions: {\n              required: true,\n            },\n          },\n          {\n            type: \"input\",\n            key: \"investmentDate\",\n            templateOptions: {\n              type: \"date\",\n            },\n          },\n          {\n            type: \"input\",\n            key: \"stockIdentifier\",\n            templateOptions: {},\n          },\n        ],\n      },\n    },\n  ];\n\n  submit() {\n    alert(JSON.stringify(this.model));\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  <formly-form\n    [model]=\"model\"\n    [fields]=\"fields\"\n    [options]=\"options\"\n    [form]=\"form\"\n  ></formly-form>\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary submit-button\"\n    [disabled]=\"!form.valid\"\n  >\n    Submit\n  </button>\n</form>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\n// import { AgGridModule } from \"ag-grid-angular\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { FormlyModule } from \"@ngx-formly/core\";\nimport { FormlyBootstrapModule } from \"@ngx-formly/bootstrap\";\n\nimport { GridTypeComponent } from \"./grid.type\";\n// import { GridFormlyCellComponent } from \"./grid-formly-cell.component\";\n\nimport { AgGridModule } from \"ag-grid-angular\";\n@NgModule({\n  declarations: [AppComponent, GridTypeComponent],\n  imports: [\n    BrowserModule,\n    AgGridModule.withComponents([]),\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      types: [\n        {\n          name: \"grid\",\n          component: GridTypeComponent,\n          defaultOptions: {\n            templateOptions: {\n              width: \"100%\",\n              height: \"800px\",\n            },\n          },\n        },\n      ],\n    }),\n    FormlyBootstrapModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { FieldArrayType } from '@ngx-formly/core';\nimport { GridOptions } from 'ag-grid-community';\n// import { GridFormlyCellComponent } from './grid-formly-cell.component';\n\n@Component({\n  selector: 'formly-field-grid',\n  template: `\n    <div [ngStyle]=\"style\">\n      <ag-grid-angular\n        #agGrid\n        style=\"width: 100%; height: 100%\"\n        class=\"className\"\n        [gridOptions]=\"gridOptions\"\n        [rowData]=\"model\"\n        (firstDataRendered)=\"onFirstDataRendered($event)\">\n      </ag-grid-angular>\n    </div>\n`,\n})\n\nexport class GridTypeComponent extends FieldArrayType implements OnInit {\n  @ViewChild('agGrid') agGrid: TemplateRef<any>;\n\n  gridOptions: GridOptions;\n  style: any = {};\n\n  ngOnInit() {\n    this.style = {\n      width: this.to.width,\n      height: this.to.height,\n    };\n\n    // map cell Renderer to Formly Component\n    // this.to.gridOptions.columnDefs.forEach(column => column.cellRendererFramework = GridFormlyCellComponent);\n\n    // set grid options and context of the parent formly field\n    const gridOptions: GridOptions = this.to.gridOptions || {};\n    gridOptions.context = {\n      parentField: this.field,\n    };\n\n    this.gridOptions = gridOptions;\n  }\n\n  onFirstDataRendered(params) {\n    params.api.sizeColumnsToFit();\n  }\n}\n\n\n\n/**  Copyright 2018 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}