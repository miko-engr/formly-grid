{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/grid.type.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","form","model","investments","investmentName","investmentDate","stockIdentifier","options","fields","className","template","key","type","templateOptions","height","gridOptions","rowHeight","columnDefs","headerName","field","sortable","width","fieldArray","fieldGroup","required","alert","JSON","stringify","submit","selector","templateUrl","styleUrls","AppModule","withComponents","forRoot","types","name","component","defaultOptions","declarations","imports","providers","bootstrap","GridTypeComponent","style","to","context","parentField","params","api","sizeColumnsToFit","onFirstDataRendered","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,Y;;;AALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,QAAR;AAEA,aAAAC,IAAA,GAAO,IAAI,wDAAJ,CAAc,EAAd,CAAP;AACA,aAAAC,KAAA,GAAa;AACXC,qBAAW,EAAE,CACX;AACEC,0BAAc,EAAE,UADlB;AAEEC,0BAAc,EAAE,YAFlB;AAGEC,2BAAe,EAAE;AAHnB,WADW,EAMX;AACEF,0BAAc,EAAE,UADlB;AAEEC,0BAAc,EAAE,YAFlB;AAGEC,2BAAe,EAAE;AAHnB,WANW,EAWX;AACEF,0BAAc,EAAE,UADlB;AAEEC,0BAAc,EAAE,YAFlB;AAGEC,2BAAe,EAAE;AAHnB,WAXW,EAgBX;AACEF,0BAAc,EAAE,UADlB;AAEEC,0BAAc,EAAE,YAFlB;AAGEC,2BAAe,EAAE;AAHnB,WAhBW,EAqBX;AACEF,0BAAc,EAAE,UADlB;AAEEC,0BAAc,EAAE,YAFlB;AAGEC,2BAAe,EAAE;AAHnB,WArBW,EA0BX;AACEF,0BAAc,EAAE,UADlB;AAEEC,0BAAc,EAAE,YAFlB;AAGEC,2BAAe,EAAE;AAHnB,WA1BW,EA+BX;AACEF,0BAAc,EAAE,UADlB;AAEEC,0BAAc,EAAE,YAFlB;AAGEC,2BAAe,EAAE;AAHnB,WA/BW,EAoCX;AACEF,0BAAc,EAAE,UADlB;AAEEC,0BAAc,EAAE,YAFlB;AAGEC,2BAAe,EAAE;AAHnB,WApCW;AADF,SAAb;AA6CA,aAAAC,OAAA,GAA6B,EAA7B;AAEA,aAAAC,MAAA,GAA8B,CAC5B;AACEC,mBAAS,EAAE,eADb;AAEEC,kBAAQ,EAAE;AAFZ,SAD4B,EAK5B;AACEC,aAAG,EAAE,aADP;AAEEC,cAAI,EAAE,MAFR;AAGEH,mBAAS,EAAE,iBAHb;AAIEI,yBAAe,EAAE;AACfC,kBAAM,EAAE,OADO;AAEfC,uBAAW,EAAE;AACXC,uBAAS,EAAE,EADA;AAEXC,wBAAU,EAAE,CACV;AACEC,0BAAU,EAAE,oBADd;AAEEC,qBAAK,EAAE,gBAFT;AAGEC,wBAAQ,EAAE,IAHZ;AAIEC,qBAAK,EAAE;AAJT,eADU,EAOV;AACEH,0BAAU,EAAE,oBADd;AAEEC,qBAAK,EAAE,gBAFT;AAGEC,wBAAQ,EAAE,IAHZ;AAIEC,qBAAK,EAAE;AAJT,eAPU,EAaV;AACEH,0BAAU,EAAE,kBADd;AAEEC,qBAAK,EAAE;AAFT,eAbU;AAFD;AAFE,WAJnB;AA6BEG,oBAAU,EAAE;AACVC,sBAAU,EAAE,CACV;AACEX,kBAAI,EAAE,OADR;AAEED,iBAAG,EAAE,gBAFP;AAGEE,6BAAe,EAAE;AACfW,wBAAQ,EAAE;AADK;AAHnB,aADU,EAQV;AACEZ,kBAAI,EAAE,OADR;AAEED,iBAAG,EAAE,gBAFP;AAGEE,6BAAe,EAAE;AACfD,oBAAI,EAAE;AADS;AAHnB,aARU,EAeV;AACEA,kBAAI,EAAE,OADR;AAEED,iBAAG,EAAE,iBAFP;AAGEE,6BAAe,EAAE;AAHnB,aAfU;AADF;AA7Bd,SAL4B,CAA9B;AA+DD;;;;eAHC,kBAAS;AACPY,eAAK,CAACC,IAAI,CAACC,SAAL,CAAe,KAAKzB,KAApB,CAAD,CAAL;AACD;;;;;;;uBAjHUH,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,oK;AAAA;AAAA;ACRzB;;AAAyB;AAAA,mBAAY,IAAA6B,MAAA,EAAZ;AAAoB,WAApB;;AACvB;;AAMA;;AAKE;;AACF;;AACF;;;;AAdM;;AAEF;;AAAA,uFAAe,QAAf,EAAe,UAAf,EAAe,SAAf,EAAe,WAAf,EAAe,MAAf,EAAe,QAAf;;AAQA;;AAAA;;;;;;;;;sEDFS7B,Y,EAAY;cALxB,uDAKwB;eALd;AACT8B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,+E,CAIA;AAMA;;;QA4BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBApBJ,CACP,uEADO,EAEP,6DAAaC,cAAb,CAA4B,EAA5B,CAFO,EAGP,kEAHO,EAIP,8DAAaC,OAAb,CAAqB;AACnBC,aAAK,EAAE,CACL;AACEC,cAAI,EAAE,MADR;AAEEC,mBAAS,EAAE,4DAFb;AAGEC,wBAAc,EAAE;AACdzB,2BAAe,EAAE;AACfQ,mBAAK,EAAE,MADQ;AAEfP,oBAAM,EAAE;AAFO;AADH;AAHlB,SADK;AADY,OAArB,CAJO,EAkBP,2EAlBO,CAoBI;;;;0HAGFkB,S,EAAS;AAAA,uBAxBL,2DAwBK,EAxBS,4DAwBT;AAxB0B,kBAE5C,uEAF4C,EAE/B,4DAF+B,EAI5C,kEAJ4C,EAIzB,6DAJyB,EAmB5C,2EAnB4C;AAwB1B,O;AALG,K;;;;;sEAKZA,S,EAAS;cAzBrB,sDAyBqB;eAzBZ;AACRO,sBAAY,EAAE,CAAC,2DAAD,EAAe,4DAAf,CADN;AAERC,iBAAO,EAAE,CACP,uEADO,EAEP,6DAAaP,cAAb,CAA4B,EAA5B,CAFO,EAGP,kEAHO,EAIP,8DAAaC,OAAb,CAAqB;AACnBC,iBAAK,EAAE,CACL;AACEC,kBAAI,EAAE,MADR;AAEEC,uBAAS,EAAE,4DAFb;AAGEC,4BAAc,EAAE;AACdzB,+BAAe,EAAE;AACfQ,uBAAK,EAAE,MADQ;AAEfP,wBAAM,EAAE;AAFO;AADH;AAHlB,aADK;AADY,WAArB,CAJO,EAkBP,2EAlBO,CAFD;AAsBR2B,mBAAS,EAAE,EAtBH;AAuBRC,mBAAS,EAAE,CAAC,2DAAD;AAvBH,S;AAyBY,Q;;;;;;;;;;;;;;;;;;ACtCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;0BAGA;;QAkBaC,iB;;;;;;;AAhBb;AAAA;;AAAA;;;AAoBE,cAAAC,KAAA,GAAa,EAAb;AApBF;AA2CC;;;;eArBC,oBAAW;AACT,eAAKA,KAAL,GAAa;AACXvB,iBAAK,EAAE,KAAKwB,EAAL,CAAQxB,KADJ;AAEXP,kBAAM,EAAE,KAAK+B,EAAL,CAAQ/B;AAFL,WAAb,CADS,CAMT;AACA;AAEA;;AACA,cAAMC,WAAW,GAAgB,KAAK8B,EAAL,CAAQ9B,WAAR,IAAuB,EAAxD;AACAA,qBAAW,CAAC+B,OAAZ,GAAsB;AACpBC,uBAAW,EAAE,KAAK5B;AADE,WAAtB;AAIA,eAAKJ,WAAL,GAAmBA,WAAnB;AACD;;;eAED,6BAAoBiC,MAApB,EAA4B;AAC1BA,gBAAM,CAACC,GAAP,CAAWC,gBAAX;AACD;;;;MA1BoC,+D;;;iDAA1BP,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,wC;AAAA;AAAA;;;;;;;;;;;;;;;;AAb1B;;AACE;;AAME;AAAA,mBAAqB,IAAAQ,mBAAA,QAArB;AAAgD,WAAhD;;AACF;;AACF;;;;AATK;;AAKD;;AAAA,mGAA2B,SAA3B,EAA2B,SAA3B;;;;;;;6GAQKR,iB;;;;;sEAAAA,iB,EAAiB;cAhB7B,uDAgB6B;eAhBnB;AACTd,kBAAQ,EAAE,mBADD;AAETnB,kBAAQ;AAFC,S;AAgBmB,Q;;gBAC3B,uD;iBAAU,Q;;;;;;;;;;;;;;;;;;;;ACtBb;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM0C,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { FormlyFormOptions, FormlyFieldConfig } from \"@ngx-formly/core/\";\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  title = \"mygrid\";\n\n  form = new FormGroup({});\n  model: any = {\n    investments: [\n      {\n        investmentName: \"project1\",\n        investmentDate: \"2021-02-01\",\n        stockIdentifier: 1,\n      },\n      {\n        investmentName: \"project2\",\n        investmentDate: \"2021-02-02\",\n        stockIdentifier: 2,\n      },\n      {\n        investmentName: \"project3\",\n        investmentDate: \"2021-02-03\",\n        stockIdentifier: 3,\n      },\n      {\n        investmentName: \"project4\",\n        investmentDate: \"2021-02-04\",\n        stockIdentifier: 4,\n      },\n      {\n        investmentName: \"project5\",\n        investmentDate: \"2021-02-05\",\n        stockIdentifier: 5,\n      },\n      {\n        investmentName: \"project6\",\n        investmentDate: \"2021-02-06\",\n        stockIdentifier: 6,\n      },\n      {\n        investmentName: \"project7\",\n        investmentDate: \"2021-02-07\",\n        stockIdentifier: 7,\n      },\n      {\n        investmentName: \"project8\",\n        investmentDate: \"2021-02-08\",\n        stockIdentifier: 8,\n      },\n    ],\n  };\n\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [\n    {\n      className: \"section-label\",\n      template: \"<h5>Personal data</h5>\",\n    },\n    {\n      key: \"investments\",\n      type: \"grid\",\n      className: \"ag-theme-balham\",\n      templateOptions: {\n        height: \"370px\",\n        gridOptions: {\n          rowHeight: 42,\n          columnDefs: [\n            {\n              headerName: \"Name of Investment\",\n              field: \"investmentName\",\n              sortable: true,\n              width: 350,\n            },\n            {\n              headerName: \"Date of Investment\",\n              field: \"investmentDate\",\n              sortable: true,\n              width: 350,\n            },\n            {\n              headerName: \"Stock Identifier\",\n              field: \"stockIdentifier\",\n              // width: 330,\n            },\n          ],\n        },\n      },\n      fieldArray: {\n        fieldGroup: [\n          {\n            type: \"input\",\n            key: \"investmentName\",\n            templateOptions: {\n              required: true,\n            },\n          },\n          {\n            type: \"input\",\n            key: \"investmentDate\",\n            templateOptions: {\n              type: \"date\",\n            },\n          },\n          {\n            type: \"input\",\n            key: \"stockIdentifier\",\n            templateOptions: {},\n          },\n        ],\n      },\n    },\n  ];\n\n  submit() {\n    alert(JSON.stringify(this.model));\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  <formly-form\n    [model]=\"model\"\n    [fields]=\"fields\"\n    [options]=\"options\"\n    [form]=\"form\"\n  ></formly-form>\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary submit-button\"\n    [disabled]=\"!form.valid\"\n  >\n    Submit\n  </button>\n</form>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\n// import { AgGridModule } from \"ag-grid-angular\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { FormlyModule } from \"@ngx-formly/core\";\nimport { FormlyBootstrapModule } from \"@ngx-formly/bootstrap\";\n\nimport { GridTypeComponent } from \"./grid.type\";\n// import { GridFormlyCellComponent } from \"./grid-formly-cell.component\";\n\nimport { AgGridModule } from \"ag-grid-angular\";\n@NgModule({\n  declarations: [AppComponent, GridTypeComponent],\n  imports: [\n    BrowserModule,\n    AgGridModule.withComponents([]),\n    ReactiveFormsModule,\n    FormlyModule.forRoot({\n      types: [\n        {\n          name: \"grid\",\n          component: GridTypeComponent,\n          defaultOptions: {\n            templateOptions: {\n              width: \"100%\",\n              height: \"800px\",\n            },\n          },\n        },\n      ],\n    }),\n    FormlyBootstrapModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { FieldArrayType } from '@ngx-formly/core';\nimport { GridOptions } from 'ag-grid-community';\n// import { GridFormlyCellComponent } from './grid-formly-cell.component';\n\n@Component({\n  selector: 'formly-field-grid',\n  template: `\n    <div [ngStyle]=\"style\">\n      <ag-grid-angular\n        #agGrid\n        style=\"width: 100%; height: 100%\"\n        class=\"className\"\n        [gridOptions]=\"gridOptions\"\n        [rowData]=\"model\"\n        (firstDataRendered)=\"onFirstDataRendered($event)\">\n      </ag-grid-angular>\n    </div>\n`,\n})\n\nexport class GridTypeComponent extends FieldArrayType implements OnInit {\n  @ViewChild('agGrid') agGrid: TemplateRef<any>;\n\n  gridOptions: GridOptions;\n  style: any = {};\n\n  ngOnInit() {\n    this.style = {\n      width: this.to.width,\n      height: this.to.height,\n    };\n\n    // map cell Renderer to Formly Component\n    // this.to.gridOptions.columnDefs.forEach(column => column.cellRendererFramework = GridFormlyCellComponent);\n\n    // set grid options and context of the parent formly field\n    const gridOptions: GridOptions = this.to.gridOptions || {};\n    gridOptions.context = {\n      parentField: this.field,\n    };\n\n    this.gridOptions = gridOptions;\n  }\n\n  onFirstDataRendered(params) {\n    params.api.sizeColumnsToFit();\n  }\n}\n\n\n\n/**  Copyright 2018 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}